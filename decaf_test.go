package ed448

import (
	. "gopkg.in/check.v1"
)

type DecafSuite struct{}

var _ = Suite(&DecafSuite{})

func (s *DecafSuite) Test_DecafMul(c *C) {

	x, _ := deserialize(serialized{
		0xf5, 0x81, 0x74, 0xd5, 0x7a, 0x33, 0x72,
		0x36, 0x3c, 0x0d, 0x9f, 0xcf, 0xaa, 0x3d,
		0xc1, 0x8b, 0x1e, 0xff, 0x7e, 0x89, 0xbf,
		0x76, 0x78, 0x63, 0x65, 0x80, 0xd1, 0x7d,
		0xd8, 0x4a, 0x87, 0x3b, 0x14, 0xb9, 0xc0,
		0xe1, 0x68, 0x0b, 0xbd, 0xc8, 0x76, 0x47,
		0xf3, 0xc3, 0x82, 0x90, 0x2d, 0x2f, 0x58,
		0xd2, 0x75, 0x4b, 0x39, 0xbc, 0xa8, 0x74,
	})

	y, _ := deserialize(serialized{
		0x74, 0xa8, 0xbc, 0x39, 0x4b, 0x75, 0xd2,
		0x58, 0x2f, 0x2d, 0x90, 0x82, 0xc3, 0xf3,
		0x47, 0x76, 0xc8, 0xbd, 0x0b, 0x68, 0xe1,
		0xc0, 0xb9, 0x14, 0x3b, 0x87, 0x4a, 0xd8,
		0x7d, 0xd1, 0x80, 0x65, 0x63, 0x78, 0x76,
		0xbf, 0x89, 0x7e, 0xff, 0x1e, 0x8b, 0xc1,
		0x3d, 0xaa, 0xcf, 0x9f, 0x0d, 0x3c, 0x36,
		0x72, 0x33, 0x7a, 0xd5, 0x74, 0x81, 0xf5,
	})

	// this is wrong
	z, _ := deserialize(serialized{
		0xcb, 0xb9, 0xf1, 0x7a, 0xcd, 0x17, 0xe4,
		0x72, 0xa4, 0x39, 0xc8, 0xeb, 0xbc, 0x43,
		0xe0, 0xf7, 0xdc, 0xc7, 0x93, 0x61, 0x72,
		0xbb, 0xa5, 0x04, 0xe3, 0x22, 0x4e, 0xf0,
		0x66, 0xf5, 0x26, 0x25, 0x4e, 0x60, 0x44,
		0x45, 0x3a, 0x4f, 0x15, 0x29, 0x9c, 0x97,
		0x77, 0xc5, 0x7b, 0x45, 0x31, 0x1d, 0x43,
		0x8e, 0xf6, 0x5b, 0xcf, 0x6e, 0xaf, 0x4b,
	})

	result := new(bigNumber)

	c.Assert(decafMul(result, x, y), DeepEquals, z)
}
